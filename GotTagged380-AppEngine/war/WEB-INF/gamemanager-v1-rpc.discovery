{
 "kind": "discovery#rpcDescription",
 "etag": "\"pF6h7OGB9E5arBzxcIiEhC2eyK8/b1Qp6vulb06Zx-dChvZNov_h4N4\"",
 "discoveryVersion": "v1",
 "id": "gamemanager:v1",
 "name": "gamemanager",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://gottagged380.appspot.com/_ah/api/",
 "rpcUrl": "https://gottagged380.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "AvailableGames": {
   "id": "AvailableGames",
   "type": "object",
   "properties": {
    "games": {
     "type": "array",
     "items": {
      "$ref": "Game"
     }
    }
   }
  },
  "Game": {
   "id": "Game",
   "type": "object",
   "properties": {
    "creator": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "GameRequest": {
   "id": "GameRequest",
   "type": "object",
   "properties": {
    "duration": {
     "type": "integer",
     "format": "int32"
    },
    "nameOfCreator": {
     "type": "string"
    },
    "nameOfPlayers": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "GameRequestResponse": {
   "id": "GameRequestResponse",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "GameStatus": {
   "id": "GameStatus",
   "type": "object",
   "properties": {
    "gameId": {
     "type": "string",
     "format": "int64"
    },
    "role": {
     "type": "string"
    },
    "status": {
     "type": "boolean"
    }
   }
  },
  "JoinGame": {
   "id": "JoinGame",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    },
    "join": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "PlayerUpdate": {
   "id": "PlayerUpdate",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    },
    "latitude": {
     "type": "number",
     "format": "double"
    },
    "longitude": {
     "type": "number",
     "format": "double"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "PlayerUpdateRespond": {
   "id": "PlayerUpdateRespond",
   "type": "object",
   "properties": {
    "distance": {
     "type": "number",
     "format": "double"
    },
    "distence": {
     "type": "number",
     "format": "double"
    },
    "hasEnded": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "winner": {
     "type": "string"
    }
   }
  }
 },
 "methods": {
  "gamemanager.game.available": {
   "id": "gamemanager.game.available",
   "allowGet": true,
   "parameters": {
    "name": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "name"
   ],
   "returns": {
    "$ref": "AvailableGames"
   }
  },
  "gamemanager.game.create": {
   "id": "gamemanager.game.create",
   "parameters": {
    "resource": {
     "$ref": "GameRequest"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "GameRequestResponse"
   }
  },
  "gamemanager.game.join": {
   "id": "gamemanager.game.join",
   "parameters": {
    "resource": {
     "$ref": "JoinGame"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "JoinGame"
   }
  },
  "gamemanager.game.status": {
   "id": "gamemanager.game.status",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    },
    "name": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "id",
    "name"
   ],
   "returns": {
    "$ref": "GameStatus"
   }
  },
  "gamemanager.player.update": {
   "id": "gamemanager.player.update",
   "parameters": {
    "resource": {
     "$ref": "PlayerUpdate"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "PlayerUpdateRespond"
   }
  }
 }
}
